[build-system]
requires = ["setuptools>=42", "wheel", "numpy"]
build-backend = "setuptools.build_meta" 

[tool.cibuildwheel]
# Skip PyPy builds 
skip = ["pp*"]

# Build for CPython 3.8 and newer
# "cp38-*", "cp39-*", "cp310-*", "cp311-*", 
build = ["cp312-*"]

# Use manylinux2014 for Linux builds to ensure compatibility
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"

# Include NumPy in the build environment
build-frontend = "pip"
before-build = [
    "pip install numpy",
    "python -c \"import os, shutil; build_dir = os.path.join(os.getcwd(), '_skbuild'); shutil.rmtree(build_dir, ignore_errors=True); print(f'Cleared {build_dir}')\""
]

# Build both x86_64 and arm64/aarch64 on all platforms where available
archs = ["auto64"]

# Test the wheels after building
test-command = "python -c \"import blend2d; print(blend2d.__version__)\""
test-skip = ["*-musllinux*", "*-emscripten*"]

# Platform-specific configurations
[tool.cibuildwheel.linux]
before-all = [
    "yum install -y cmake3",
    "ln -sf /usr/bin/cmake3 /usr/bin/cmake"
]
environment = { CMAKE_BUILD_PARALLEL_LEVEL="2" }

[tool.cibuildwheel.macos]
environment = { CMAKE_BUILD_PARALLEL_LEVEL="2" }

[tool.cibuildwheel.windows]
before-build = [
    "pip install delvewheel numpy",
    "python -c \"import os, shutil; build_dir = os.path.join(os.getcwd(), '_skbuild'); shutil.rmtree(build_dir, ignore_errors=True); print(f'Cleared {build_dir}')\""
]
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"