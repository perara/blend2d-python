name: Build Wheels

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build ${{ matrix.platform }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            platform: manylinux_x86_64
            arch: x86_64
          
          # Linux aarch64 (ARM64)
          - os: ubuntu-latest
            platform: manylinux_aarch64
            arch: aarch64
            qemu: true
          
          # macOS x86_64
          - os: macos-11
            platform: macosx_x86_64
            arch: x86_64
          
          # macOS arm64
          - os: macos-11
            platform: macosx_arm64
            arch: arm64
            cross_compile: true
          
          # Windows x86_64
          - os: windows-latest
            platform: win_amd64
            arch: AMD64

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      # Set up QEMU for ARM64 emulation on Linux
      - name: Set up QEMU
        if: ${{ matrix.qemu }}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      # Configure macOS arm64 cross-compilation
      - name: Set macOS arm64 deployment target
        if: ${{ matrix.cross_compile }}
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV
          echo "CIBW_ARCHS_MACOS=arm64" >> $GITHUB_ENV

      # Build the wheels
      - name: Build wheels
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ARCHS: ${{ matrix.arch }}
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      # Store the built wheels
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.platform }}
          path: ./wheelhouse/*.whl

  # Build WebAssembly wheels using Emscripten
  build_wasm:
    name: Build WebAssembly wheels
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel
      
      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh
          echo "CIBW_ENVIRONMENT=EMSCRIPTEN_ROOT=$(pwd)/upstream/emscripten" >> $GITHUB_ENV
          
      - name: Build WebAssembly wheels
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_PLATFORM: emscripten
        run: |
          python -m cibuildwheel --output-dir wheelhouse
          
      - name: Upload WebAssembly wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-emscripten
          path: ./wheelhouse/*.whl

  # Upload to PyPI when tagged
  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_wasm]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist
          
      - name: Prepare distribution
        run: |
          mkdir -p dist-upload
          find dist -name "*.whl" -exec cp {} dist-upload \;

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}  # You'll need to set this in GitHub secrets
          packages-dir: dist-upload/ 